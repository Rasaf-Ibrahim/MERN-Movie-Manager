// hook
import { useImmer } from 'use-immer';
import { useLogger, useUpdateEffect } from 'react-use';

// components
import { Box, InputLabel, FormHelperText, Typography } from '@mui/material';
import WYSIWYG___COMPONENT from './mui-wysiwyg/mui-wysiwyg';
import { form_empty_field_func } from '@/utils/form/form-empty-field-func';
import { useRef } from 'react';





/*-------------------------------------------------------------------
 ‚úÖ Functional Component 
----------------------------------------------------------------------*/
export default function MUI_WYSIWYG_PARENT___COMPONENT({
    label_of_parent_form,
    input_name_of_parent_form,
    state_of_parent_form,
    update_state_of_parent_form,
    validation_info_obj_of_parent_form,
    actions_of_parent_form,
    display_these_toolbar_options_in_the_parent_form
}) {


    /* üç™üç™ states & references for child <WYSIWYG___COMPONENT/>  üç™üç™ */



    /* üçî all the states of the WYSIWYG editor in one place! üçî */
    const wysiwyg_initial_state = {

        /* property to store the HTML generated by Quill */
        quill_generated_html: '',

        /* property to store the cursor position and selection range*/
        editor_cursor: {
            position: 0, //initial
            selection_length: 0 //initial
        },


        // property to track all the images and their activities
        images: {

            last_uploaded_image_link: '',

            all_uploaded_images_info: [],

            all_uploaded_images_link: [],

            all_inserted_images_link: [],

            all_removed_images_link: [],
        },


        /* property to track formats of the selected text */
        formats_of_selected_text: {
            header: 0,
            font: 'sans-serif',
            bold: false,
            italic: false,
            underline: false,
            strike: false, // strikethrough
            list: false,  // ordered & unordered(bullet) list
            align: false, //text alignment
            indent: 0,
            direction: false, //rtl, ltr
            blockquote: false,
            'code-block': false,
            link: '', //inserted link
            script: false


        }
    }


    const [wysiwyg_state, update_wysiwyg_state] = useImmer(wysiwyg_initial_state)


    // Logging the state
    useLogger('wysiwyg_state', wysiwyg_state)




    /* üçî quill's reference üçî */
    const quillRef = useRef(null)






    /* üç™üç™ managing external(parent form) states üç™üç™*/


    /* üçî updating the parent form state & triggering validation whenever internal wysiwyg_state gets updated üçî */
    useUpdateEffect(() => {

        update_state_of_parent_form(draft => {

            draft.form_data[input_name_of_parent_form].value = wysiwyg_state.quill_generated_html

            draft.form_data[input_name_of_parent_form].additionally_tracking.all_uploaded_images_info = [...wysiwyg_state.images.all_uploaded_images_info]

            draft.form_data[input_name_of_parent_form].additionally_tracking.all_removed_images_link = [...wysiwyg_state.images.all_removed_images_link]
        })

    }, [wysiwyg_state])






    // üçî validation function üçî
    const validation_func = async () => {


        /*  required field Validation */
        //  only proceed to required field validation if this field is a required field.
        if (validation_info_obj_of_parent_form[input_name_of_parent_form].is_required) {


            if (form_empty_field_func(wysiwyg_state.quill_generated_html)) {

                actions_of_parent_form.required_field_error({
                    input_name: [input_name_of_parent_form],
                })
            }

            else {
                actions_of_parent_form.no_required_field_error({
                    input_name: [input_name_of_parent_form],
                })

            }



        }

    }



    /* üçî executing validation function üçî*/
    useUpdateEffect(() => {

        if (quillRef.current.hasFocus()) {

            validation_func()
        }


    }, [wysiwyg_state.quill_generated_html])





    /* üçî resetting the editor when resetting_the_form is triggered üçî */
    useUpdateEffect(() => {

        quillRef.current.setText('')

        /*even if we use '' for resetting, quill will reset by generating this html '<p><br></p>' */

    }, [state_of_parent_form.resetting_the_form])






    /*-------------------------------------------------------------------
        ‚úÖ JSX 
    ----------------------------------------------------------------------*/
    return (

        <Box sx={(theme) => ({
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'stretch',
            gap: '1rem'
        })}>


            <InputLabel>{label_of_parent_form}</InputLabel>


            {/* MAIN CODE OF THE WYSIWYG IS IN THE FOLLOWING COMPONENT */}
            <WYSIWYG___COMPONENT
                quillRef={quillRef}
                state_of_parent_form={state_of_parent_form}
                wysiwyg_initial_state={wysiwyg_initial_state}
                wysiwyg_state={wysiwyg_state}
                update_wysiwyg_state={update_wysiwyg_state}
                display_these_toolbar_options_in_the_parent_form={display_these_toolbar_options_in_the_parent_form}
            />




            {/* error message */}
            <FormHelperText sx={{ color: 'error.main', textAlign: 'center' }}>


                {state_of_parent_form.required_field_error[input_name_of_parent_form] === true &&
                    <Typography variant='body1'>
                        You must not skip this field.
                    </Typography>
                }



            </FormHelperText>

        </Box>

    )
}















